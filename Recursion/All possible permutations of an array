
import java.util.*;
class Recursion {
    void recurPermute(int index, int[] nums, List<List<Integer>> ans) {
        if(index == nums.length) {
            List<Integer> ds = new ArrayList<>();
            for(int i=0; i<nums.length; i++) {
                ds.add(nums[i]);
            }
            ans.add(new ArrayList<>(ds));
            return;
        }
        for(int i=index; i<nums.length; i++) {
            swap(i, index, nums);
            recurPermute(index+1, nums, ans);
            swap(i, index, nums);
        }
        return;
    }
    void swap(int i, int j, int[] nums) {
            int t = nums[i];
            nums[i] = nums[j];
            nums[j] = t;
    }
    public static void main(String[] args) {
        Recursion recObj = new Recursion();
        List<List<Integer>> ans = new ArrayList<>();
        int[] nums = new int[] {1,2,3};
        recObj.recurPermute(0, nums, ans);
        System.out.println(ans);
    }
}

// Input [1,2,3]
// Output [[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 2, 1], [3, 1, 2]]
